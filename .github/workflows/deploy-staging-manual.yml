name: Manual Staging Deploy 

on:
  workflow_dispatch:
    inputs:
      deploy_django:
        description: 'Deploy Django App'
        required: true
        type: boolean
        default: false
      django_migration:
        description: 'Run Django Migrations'
        required: true
        type: boolean
        default: false
      deploy_flask:
        description: 'Deploy Flask App'
        required: true
        type: boolean
        default: false

jobs:
  Django-App:
    runs-on: ubuntu-latest
    name: Staging Deploy Django
    timeout-minutes: 15
    if: github.event.inputs.deploy_django == 'true' || github.event.inputs.django_migration == 'true'

    steps:
      - name: Check out source repository
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        name: Setup cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('services/django-app/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r services/django-app/requirements.txt

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Collect static files
        run: |
          cd services/django-app
          python manage.py collectstatic --noinput
          gcloud storage rsync -r staticfiles gs://'${{ vars.GCS_BUCKET }}'/static

      - name: Docker Auth
        id: docker-auth
        run: |-
          gcloud auth configure-docker "${{ vars.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |-
          docker build -t "${{ vars.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ vars.GAR_NAME }}/${{ vars.SERVICE }}:${{ github.sha }}" ./services/django-app
          docker push "${{ vars.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ vars.GAR_NAME }}/${{ vars.SERVICE }}:${{ github.sha }}"

      - name: Update Migrations Image
        if: github.event.inputs.django_migration == 'true'
        run: |
          gcloud run jobs update ${{ vars.MIGRATION_JOB_NAME }} \
            --image "${{ vars.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ vars.GAR_NAME }}/${{ vars.SERVICE }}:${{ github.sha }}" \
            --region ${{ vars.REGION }}

      - name: Run Database Migrations
        if: github.event.inputs.django_migration == 'true'
        run: |
          gcloud run jobs execute ${{ vars.MIGRATION_JOB_NAME }} \
            --region ${{ vars.REGION }} \

      - name: Deploy to Cloud Run
        id: deploy
        if: github.event.inputs.deploy_django == 'true'
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ vars.SERVICE }}
          region: ${{ vars.REGION }}
          image: ${{ vars.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ vars.GAR_NAME }}/${{ vars.SERVICE }}:${{ github.sha }}

  Flask-App:
    runs-on: ubuntu-latest
    name: Staging Deploy Flask
    timeout-minutes: 15
    if: github.event.inputs.deploy_flask == 'true'

    steps:
      - name: Check out source repository
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Docker Auth
        id: docker-auth
        run: |-
          gcloud auth configure-docker "${{ vars.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |-
          docker build -t "${{ vars.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ vars.GAR_NAME_FLASK }}/${{ vars.SERVICEFLASK }}:${{ github.sha }}" ./services/flask-app
          docker push "${{ vars.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ vars.GAR_NAME_FLASK }}/${{ vars.SERVICEFLASK }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ vars.SERVICEFLASK }}
          region: ${{ vars.REGION }}
          image: ${{ vars.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ vars.GAR_NAME_FLASK }}/${{ vars.SERVICEFLASK }}:${{ github.sha }}

